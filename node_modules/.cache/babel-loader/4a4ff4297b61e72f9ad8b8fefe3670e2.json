{"ast":null,"code":"var _jsxFileName = \"/Users/bernardtseng/Desktop/Projects/bento-project/src/components/MainDishes.js\",\n    _s = $RefreshSig$();\n\n// src/components/MainDishes.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Pagination } from 'react-bootstrap';\nimport DishCard from './DishCard';\nimport mainDishesData from './mainDishesData';\nimport './MainDishes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainDishes = () => {\n  _s();\n\n  const [dishes, setDishes] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dishesPerPage] = useState(9); // Number of dishes per page\n\n  useEffect(() => {\n    // Fetch data from the API or use the sample data\n    setDishes(mainDishesData);\n  }, []); // Logic for displaying dishes based on pagination\n\n  const indexOfLastDish = currentPage * dishesPerPage;\n  const indexOfFirstDish = indexOfLastDish - dishesPerPage;\n  const currentDishes = dishes.slice(indexOfFirstDish, indexOfLastDish); // Update the current page\n\n  const handlePageClick = (event, pageNumber) => {\n    event.preventDefault();\n    setCurrentPage(pageNumber);\n  };\n\n  const totalPages = Math.ceil(dishes.length / dishesPerPage);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: currentDishes.map(dish => /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(DishCard, {\n          dish: dish\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, dish.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          className: \"justify-content-center\",\n          children: [...Array(totalPages)].map((_, i) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n            active: i + 1 === currentPage,\n            onClick: e => handlePageClick(e, i + 1),\n            children: i + 1\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainDishes, \"uO/cmkaOYdc0KyxEEDTD/N067yc=\");\n\n_c = MainDishes;\nexport default MainDishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDishes\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Pagination","DishCard","mainDishesData","MainDishes","dishes","setDishes","currentPage","setCurrentPage","dishesPerPage","indexOfLastDish","indexOfFirstDish","currentDishes","slice","handlePageClick","event","pageNumber","preventDefault","totalPages","Math","ceil","length","map","dish","id","Array","_","i","e"],"sources":["/Users/bernardtseng/Desktop/Projects/bento-project/src/components/MainDishes.js"],"sourcesContent":["// src/components/MainDishes.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Pagination } from 'react-bootstrap';\nimport DishCard from './DishCard';\nimport mainDishesData from './mainDishesData';\nimport './MainDishes.css';\n\nconst MainDishes = () => {\n  const [dishes, setDishes] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dishesPerPage] = useState(9); // Number of dishes per page\n\n  useEffect(() => {\n    // Fetch data from the API or use the sample data\n    setDishes(mainDishesData);\n  }, []);\n\n  // Logic for displaying dishes based on pagination\n  const indexOfLastDish = currentPage * dishesPerPage;\n  const indexOfFirstDish = indexOfLastDish - dishesPerPage;\n  const currentDishes = dishes.slice(indexOfFirstDish, indexOfLastDish);\n\n  // Update the current page\n  const handlePageClick = (event, pageNumber) => {\n    event.preventDefault();\n    setCurrentPage(pageNumber);\n  };\n\n  const totalPages = Math.ceil(dishes.length / dishesPerPage);\n\n  return (\n    <Container>\n      <Row>\n        {currentDishes.map(dish => (\n          <Col key={dish.id} md={3} className=\"mb-4\">\n            <DishCard dish={dish} />\n          </Col>\n        ))}\n      </Row>\n      <Row>\n        <Col>\n          <Pagination className=\"justify-content-center\">\n            {[...Array(totalPages)].map((_, i) => (\n              <Pagination.Item\n                key={i + 1}\n                active={i + 1 === currentPage}\n                onClick={(e) => handlePageClick(e, i + 1)}\n              >\n                {i + 1}\n              </Pagination.Item>\n            ))}\n          </Pagination>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default MainDishes\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,UAA9B,QAAgD,iBAAhD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACa,aAAD,IAAkBb,QAAQ,CAAC,CAAD,CAAhC,CAHuB,CAGc;;EAErCC,SAAS,CAAC,MAAM;IACd;IACAS,SAAS,CAACH,cAAD,CAAT;EACD,CAHQ,EAGN,EAHM,CAAT,CALuB,CAUvB;;EACA,MAAMO,eAAe,GAAGH,WAAW,GAAGE,aAAtC;EACA,MAAME,gBAAgB,GAAGD,eAAe,GAAGD,aAA3C;EACA,MAAMG,aAAa,GAAGP,MAAM,CAACQ,KAAP,CAAaF,gBAAb,EAA+BD,eAA/B,CAAtB,CAbuB,CAevB;;EACA,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;IAC7CD,KAAK,CAACE,cAAN;IACAT,cAAc,CAACQ,UAAD,CAAd;EACD,CAHD;;EAKA,MAAME,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUf,MAAM,CAACgB,MAAP,GAAgBZ,aAA1B,CAAnB;EAEA,oBACE,QAAC,SAAD;IAAA,wBACE,QAAC,GAAD;MAAA,UACGG,aAAa,CAACU,GAAd,CAAkBC,IAAI,iBACrB,QAAC,GAAD;QAAmB,EAAE,EAAE,CAAvB;QAA0B,SAAS,EAAC,MAApC;QAAA,uBACE,QAAC,QAAD;UAAU,IAAI,EAAEA;QAAhB;UAAA;UAAA;UAAA;QAAA;MADF,GAAUA,IAAI,CAACC,EAAf;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,uBACE,QAAC,UAAD;UAAY,SAAS,EAAC,wBAAtB;UAAA,UACG,CAAC,GAAGC,KAAK,CAACP,UAAD,CAAT,EAAuBI,GAAvB,CAA2B,CAACI,CAAD,EAAIC,CAAJ,kBAC1B,QAAC,UAAD,CAAY,IAAZ;YAEE,MAAM,EAAEA,CAAC,GAAG,CAAJ,KAAUpB,WAFpB;YAGE,OAAO,EAAGqB,CAAD,IAAOd,eAAe,CAACc,CAAD,EAAID,CAAC,GAAG,CAAR,CAHjC;YAAA,UAKGA,CAAC,GAAG;UALP,GACOA,CAAC,GAAG,CADX;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CAjDD;;GAAMvB,U;;KAAAA,U;AAmDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}